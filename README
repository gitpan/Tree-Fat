What is a Fat-Tree?  It's a cross between a tree and an array!

Name           DSLI  Description                                  Info
-----------    ----  -------------------------------------------- -----
Tree::Fat      bdcO  Embeddable F-Tree Algorithm Suite            JPRIT

Implements object-oriented trees using algorithms adapted from b-trees
and AVL trees (without resorting to yucky C++).


The reasons for another tree implementation are as follows:

- Publically available code is the best tested.  Buggy trees are
completely unacceptable.  This module has been put through test
coverage analysis and stress testing.

- The algorithms have been completely separated from any notion of a
database.  The code is tweaked for easy embedding into other
applications.  A very flexible set of hooks are available while still
preserving the functional abstraction.


Get it via http://www.perl.com/CPAN/authors/id/JPRIT/ !


** 01-23-98 RELEASE 0.07

- Factored out code that isn't sensitive to key/data layout.
Unfortunately, this change necessitated tweaking the memory layout.

- tc_insert has much better overall performance.  tc_seek now does a
full binary search.  tc_delete is re-implemented with rotations.
Asymptotic performance is now respectable.

- tv_compress, tv_balance added.

- memmove & memcpy of slots used throughout (instead of assignment).
Added more hooks for C++.  Fixed cpp (re)directives.


Copyright © 1997-1998 Joshua Nathaniel Pritikin.  All rights reserved.

This package is free software and is provided "as is" without express
or implied warranty.  It may be used, redistributed and/or modified
under the terms of the Perl Artistic License (see
http://www.perl.com/perl/misc/Artistic.html)
